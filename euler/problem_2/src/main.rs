// https://projecteuler.net/problem=2

/*
    <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:
$$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$</p>
<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>

// 4613732
 */

fn main() {
    println!("Hello, world!");
    let mut last_two_fibonacci: [i32; 2] = [1, 2];
    let mut sum = 0;
    let limit = 4000000;

    loop {
        if last_two_fibonacci[0] <= limit && last_two_fibonacci[0] % 2 == 0 {
            sum += last_two_fibonacci[0];
        }

        if last_two_fibonacci[1] <= limit && last_two_fibonacci[1] % 2 == 0 {
            sum += last_two_fibonacci[1];
        }

        if last_two_fibonacci[0] > limit || last_two_fibonacci[0] > limit {
            break;
        }

        let new_fibonacci = last_two_fibonacci.iter().sum();
        last_two_fibonacci = [new_fibonacci, last_two_fibonacci[1] + new_fibonacci];
    }

    println!("sum: {}", sum)
}
